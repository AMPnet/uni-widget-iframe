

name: Release
on:
  schedule:
    - cron:  '0 12 * * 1-4' # every day 12:00 UTC Monday-Thursday

  # manual trigger
  workflow_dispatch:
    inputs:
      version:
        description: 'version tag (e.g. 1.0.0-alpha3'
        required: true
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the IPFS bundle
        run: yarn build

      - name: Pin to IPFS
        id: upload
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.3
        with:
          pin-name: Uniswap Widget Iframe ${{ inputs.version }}
          path: './build'
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: Convert CIDv0 to CIDv1
        id: convert_cidv0
        uses: uniswap/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload.outputs.hash }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.version }}
          release_name: Release ${{ inputs.version }}
          body: |
            IPFS hash of the deployment:
            - CIDv0: `${{ steps.upload.outputs.hash }}`
            - CIDv1: `${{ steps.convert_cidv0.outputs.cidv1 }}`
            
            IPFS gateways:
            - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
            - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/
            - [ipfs://${{ steps.upload.outputs.hash }}/](ipfs://${{ steps.upload.outputs.hash }}/)
